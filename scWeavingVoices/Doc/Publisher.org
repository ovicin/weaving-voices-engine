Distributed model with auto-notification to all clients in the system.

Tue, Aug  5 2014, 15:35 EEST

* Usage Scenario
:PROPERTIES:
:DATE:     <2014-08-05 Tue 15:34>
:END:

Start with a distributed application, consisting of several applications (running on different hardware or the same).

The purpose of the Publisher module is to enable to each application:

1. to share data with all other applications
2. to receive updates of data when they change anywhere in the system.
3. to subscribe for updates only for those data that concern the application (not global broadcasting).

* Data model

Data items are stored under a dictionary (Attributes dictionary).  So data items are registered by name.

A data item is called an Attribute.  The structure of an Attribute is:

- Name :: Unique identifier of the *attribute*.
- Value :: Current value of the *attribute*.
- Net Adress :: Current network location for the *application* (IP Address and Port)
- Subscribers :: Collection of NetAdresses of the *applications* registered to receive updates when the *attribute* changes. (The collection is implemented as Set to avoid duplicates).
- Time :: time (in seconds) when the last update was issued.  (The timestamp of the OSC message that updated the data.)

* Architecture

We have three classes :

** Publisher

The publisher holds a global dictionary of all attributes.  This includes the Net Addresses of the applications where the attributes live, and the set of subscribers of each attribute.

The publisher performs the following tasks:

- =put= :: Register a new attribute or update the value of an existing attribute.
  - When a put is performed, the Publisher updates all applications that have subscribed to this attribute.
  - Note: The =put= also registers the address of the application where the attribute lives.  If the address changes (because two different applications perform a put on the same attribute), then a warning is issued.
- =subscribe= :: Register an application to receive updates from an attribute
- =unsubscribe= :: Remove an application from the set of subscribers of an attribute.

** Subscriber



** Attribute













* Architecture
:PROPERTIES:
:DATE:     <2014-08-05 Tue 15:35>
:END:





* Publisher
* Subscriber
* Attribute
